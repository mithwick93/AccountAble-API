version: '3.1'

services:
  db:
    extends:
      file: common-services.yml
      service: db
    networks:
      - accountable-app-network
    restart: always
    deploy:
      resources:
        limits:
          cpus: "4"
          memory: "4G"
        reservations:
          cpus: "0.5"
          memory: "512M"

  app:
    container_name: accountable-api
    build:
      context: ../
      dockerfile: ./infrastructure/Dockerfile
    networks:
      - accountable-app-network
    ports:
      - "8443:8443"
    depends_on:
      db:
        condition: service_healthy
    environment:
      APP_PORT: "${APP_PORT}"
      DB_URL: "${DB_URL}"
      DB_USERNAME: "${DB_USERNAME}"
      DB_PASSWORD: "${DB_PASSWORD}"
      CURRENCY_API_KEY: "${CURRENCY_API_KEY}"
      KEY_STORE_PASSWORD: "${KEY_STORE_PASSWORD}"
      AES_SECRET_KEY: "${AES_SECRET_KEY}"
      RSA_PRIVATE_KEY: "${RSA_PRIVATE_KEY}"
      RSA_PUBLIC_KEY: "${RSA_PUBLIC_KEY}"
    restart: always
    deploy:
      resources:
        limits:
          cpus: "4"
          memory: "4G"
        reservations:
          cpus: "0.5"
          memory: "2G"
  prometheus:
    image: prom/prometheus:v3.2.0
    container_name: prometheus
    ports:
      - "9091:9090"
    volumes:
      - ./monitoring/prometheus.yml:/etc/prometheus/prometheus.yml
    networks:
      - accountable-app-network
    restart: always
    deploy:
      resources:
        limits:
          cpus: "4"
          memory: "4G"
        reservations:
          cpus: "0.5"
          memory: "2G"

  grafana:
    image: grafana/grafana:11.5.2
    container_name: grafana
    ports:
      - "7000:3000"
    volumes:
      - grafana-storage:/var/lib/grafana
    networks:
      - accountable-app-network
    restart: always
    deploy:
      resources:
        limits:
          cpus: "4"
          memory: "4G"
        reservations:
          cpus: "0.5"
          memory: "2G"

volumes:
  accountable-mysql-data:
  grafana-storage:

networks:
  accountable-app-network: